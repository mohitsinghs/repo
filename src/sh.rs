use std::{path::Path, process::exit};

pub fn get_current_shell() -> Option<String> {
    match std::env::var("SHELL") {
        Ok(shell) => Path::new(&shell)
            .file_name()
            .and_then(|f| f.to_str())
            .map(|f| f.to_string()),
        Err(_) => None,
    }
}

pub fn print_completions(shell: &str, binding: &str) {
    match shell {
        "zsh" => println!(
            "# Put the line below in ~/.zshrc:
#
#   eval \"$(repo sh zsh -b {binding})\"
#
# The following lines are autogenerated:

__repo_completion() {{
    reply=($(repo cmp $@))
}}

{binding}() {{
    local p=\"$(repo cd $@)\"
    test -d \"$p\" && cd \"$p\"
    if [[ -n \"$TMUX\" && -n \"$p\" ]]; then
      tmux renamew $(basename $p) >/dev/null 2>&1
    fi
    if [[ \"$TERM_PROGRAM\" -eq \"WezTerm\" && -n \"$p\" ]]; then
      wezterm cli set-tab-title $(basename $p) >/dev/null 2>&1
    fi
}}

compctl -U -K __repo_completion {binding}",
        ),
        "bash" => println!(
            "# Put the line below in ~/.bashrc or ~/.bash_profile:
#
#   eval \"$(repo sh bash -b {binding})\"
#
# The following lines are autogenerated:

__repo_completion() {{
	local term=\"${{COMP_LINE/#{binding} /}}\"
	COMPREPLY=($(repo cmp \"$term\"))
}}

{binding}() {{
    local p=\"$(repo cd $@)\"
    test -d \"$p\" && cd \"$p\"
    if [[ -n \"$TMUX\" && -n \"$p\" ]]; then
      tmux renamew $(basename $p) >/dev/null 2>&1
    fi
    if [[ \"$TERM_PROGRAM\" -eq \"WezTerm\" && -n \"$p\" ]]; then
      wezterm cli set-tab-title $(basename $p) >/dev/null 2>&1
    fi
}}

complete -o dirnames -F '__repo_completion' {binding}",
        ),

        "fish" => println!(
            "  # Put the line below in your fish config file (usually ~/.config/fish/config.fish):
  #
  #   source (repo sh fish -b {binding} | psub)
   function {binding}
      set p (repo cd $argv)
      test -d \"$p\" && cd \"$p\"
      if test -n \"$TMUX\" -a -n \"$p\"
          tmux renamew (basename $p) >/dev/null 2>&1
      end
      if test \"$TERM_PROGRAM\" = \"WezTerm\" -a -n \"$p\"
          wezterm cli set-tab-title (basename $p) >/dev/null 2>&1
      end
  end
  complete -c {binding} -f -a \"(repo cmp $argv | tr ' ' '\n' )\""
        ),
        sh => {
            println!("unsupported shell : {}", sh);
            exit(1)
        }
    }
}
