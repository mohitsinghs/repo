use std::{path::Path, process::exit};

use slog::{error, Logger};

pub fn get_current_shell() -> Option<String> {
    match std::env::var("SHELL") {
        Ok(shell) => Path::new(&shell)
            .file_name()
            .and_then(|f| f.to_str())
            .map(|f| f.to_string()),
        Err(_) => None,
    }
}

pub fn print_completions(shell: Option<&str>, binding: &str, log: Logger) {
    match shell {
        Some("zsh") => println!(
            "# Put the line below in ~/.zshrc:
#
#   eval \"$(repo sh zsh -b {binding})\"
#
# The following lines are autogenerated:

repo_completion() {{
reply=(`repo cmp $@`)
}}

{binding}() {{
local p=\"$(repo cd $@)\"
test -d \"$p\" && cd \"$p\"
}}

compctl -U -K repo_completion {binding}",
        ),
        Some(sh) => {
            error!(log, "sh: unsupported shell"; "shell" => sh);
            exit(1)
        }
        None => exit(0),
    }
}
